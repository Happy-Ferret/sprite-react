{"remainingRequest":"/Users/akirawu/Workspace/spritejs/sprite-react/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"targets\":{\"browsers\":[\"> 1%\",\"last 2 versions\",\"not ie <= 8\"]}}],\"@babel/preset-react\",[\"/Users/akirawu/Workspace/spritejs/sprite-react/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-transform-runtime\",\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-import-meta\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-proposal-json-strings\",[\"@babel/plugin-proposal-decorators\",{\"legacy\":true}],\"@babel/plugin-proposal-function-sent\",\"@babel/plugin-proposal-export-namespace-from\",\"@babel/plugin-proposal-numeric-separator\",\"@babel/plugin-proposal-throw-expressions\",\"/Users/akirawu/Workspace/spritejs/sprite-react/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/akirawu/Workspace/spritejs/sprite-react/src/Scene.js","dependencies":[{"path":"/Users/akirawu/Workspace/spritejs/sprite-react/src/Scene.js","mtime":1537178169978},{"path":"/Users/akirawu/Workspace/spritejs/sprite-react/node_modules/cache-loader/dist/cjs.js","mtime":1537175402674},{"path":"/Users/akirawu/Workspace/spritejs/sprite-react/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { Scene } from 'spritejs';\nimport React, { Component } from 'react';\nimport { SpriteRender } from './SpriteRender';\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._scene = new Scene(this.refs.scene, this.props);\n      this._mountNode = SpriteRender.createContainer(this._scene);\n      SpriteRender.updateContainer(this.props.children, this._mountNode, this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      SpriteRender.updateContainer(this.props.children, this._mountNode, this);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      SpriteRender.updateContainer(null, this._mountNode, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _ref = this.props.viewport || [300, 300],\n          _ref2 = _slicedToArray(_ref, 2),\n          width = _ref2[0],\n          height = _ref2[1];\n\n      var style = {\n        position: 'relative',\n        width: width,\n        height: height\n      };\n      return React.createElement('div', {\n        ref: 'scene',\n        style: style\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/akirawu/Workspace/spritejs/sprite-react/src/Scene.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/akirawu/Workspace/spritejs/sprite-react/src/Scene.js"],"names":["Scene","React","Component","SpriteRender","_scene","refs","scene","props","_mountNode","createContainer","updateContainer","children","prevProps","prevState","viewport","width","height","style","position","createElement","ref"],"mappings":";;;;;;;;;;;;;AAAA,SAAQA,KAAR,QAAoB,UAApB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;;;;;;;;;;;;;;;wCAGsB;AAClB,WAAKC,MAAL,GAAc,IAAIJ,KAAJ,CAAU,KAAKK,IAAL,CAAUC,KAApB,EAA2B,KAAKC,KAAhC,CAAd;AACA,WAAKC,UAAL,GAAkBL,YAAY,CAACM,eAAb,CAA6B,KAAKL,MAAlC,CAAlB;AACAD,MAAAA,YAAY,CAACO,eAAb,CAA6B,KAAKH,KAAL,CAAWI,QAAxC,EAAkD,KAAKH,UAAvD,EAAmE,IAAnE;AACD;;;uCAEkBI,S,EAAWC,S,EAAW;AACvCV,MAAAA,YAAY,CAACO,eAAb,CAA6B,KAAKH,KAAL,CAAWI,QAAxC,EAAkD,KAAKH,UAAvD,EAAmE,IAAnE;AACD;;;2CAEsB;AACrBL,MAAAA,YAAY,CAACO,eAAb,CAA6B,IAA7B,EAAmC,KAAKF,UAAxC,EAAoD,IAApD;AACD;;;6BAEQ;AAAA,iBACiB,KAAKD,KAAL,CAAWO,QAAX,IAAuB,CAAC,GAAD,EAAM,GAAN,CADxC;AAAA;AAAA,UACAC,KADA;AAAA,UACOC,MADP;;AAEP,UAAMC,KAAK,GAAG;AACZC,QAAAA,QAAQ,EAAE,UADE;AAEZH,QAAAA,KAAK,EAALA,KAFY;AAGZC,QAAAA,MAAM,EAANA;AAHY,OAAd;AAMA,aAAOf,KAAK,CAACkB,aAAN,CAAoB,KAApB,EAA2B;AAACC,QAAAA,GAAG,EAAE,OAAN;AAAeH,QAAAA,KAAK,EAALA;AAAf,OAA3B,CAAP;AACD;;;;;;;;;;;EAxB0Bf,S;;AAA7B","sourcesContent":["import {Scene} from 'spritejs';\nimport React, {Component} from 'react';\nimport {SpriteRender} from './SpriteRender';\n\nexport default class extends Component {\n  componentDidMount() {\n    this._scene = new Scene(this.refs.scene, this.props);\n    this._mountNode = SpriteRender.createContainer(this._scene);\n    SpriteRender.updateContainer(this.props.children, this._mountNode, this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    SpriteRender.updateContainer(this.props.children, this._mountNode, this);\n  }\n\n  componentWillUnmount() {\n    SpriteRender.updateContainer(null, this._mountNode, this);\n  }\n\n  render() {\n    const [width, height] = this.props.viewport || [300, 300];\n    const style = {\n      position: 'relative',\n      width,\n      height,\n    };\n\n    return React.createElement('div', {ref: 'scene', style});\n  }\n}\n"]}]}